{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "2efa3499",
   "metadata": {},
   "outputs": [],
   "source": [
    "# 필요 라이브러리 import\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import streamlit as st\n",
    "import kmeans\n",
    "import prepro\n",
    "import logic\n",
    "import tree\n",
    "import forest\n",
    "import xg\n",
    "import light\n",
    "import knn\n",
    "import joblib\n",
    "\n",
    "\n",
    "# streamlit 앱 제목\n",
    "st.title(\"항공사 고객 만족도 Machine Learning\")\n",
    "\n",
    "# 데이터 읽어오기\n",
    "airline = pd.read_csv(\"https://raw.githubusercontent.com/syriness/MiniProject_AirlineMachineLearning/main/train.csv\")\n",
    "\n",
    "st.header(\"데이터 확인\")\n",
    "st.table(airline.head(10))\n",
    "st.write(\"원 데이터셋에 약 10만개의 데이터가 있으며, 훈련셋에는 약 26,000개의 데이터가 있다.\")\n",
    "\n",
    "st.write(\"\")\n",
    "st.write(\"\")\n",
    "st.write(\"\")\n",
    "\n",
    "airline2 = pd.read_csv(\"https://raw.githubusercontent.com/syriness/MiniProject_AirlineMachineLearning/main/test.csv\")\n",
    "airline2.dropna(inplace=True)\n",
    "\n",
    "airline.dropna(inplace=True)\n",
    "\n",
    "\n",
    "kmeans.kmeans_clustering(airline, airline2)   \n",
    "    \n",
    "X, y, airline_test_X, airline_test = prepro.preprocess(airline, airline2)\n",
    "    \n",
    "st.write(\"\")\n",
    "st.write(\"\")\n",
    "st.write(\"\")\n",
    "\n",
    "logic.logic_reg(X, y, airline_test_X, airline_test)\n",
    "\n",
    "st.write(\"\")\n",
    "st.write(\"\")\n",
    "st.write(\"\")\n",
    "\n",
    "tree.decision_(X, y, airline_test_X, airline_test)\n",
    "\n",
    "st.write(\"\")\n",
    "st.write(\"\")\n",
    "st.write(\"\")\n",
    "\n",
    "forest.random_(X, y, airline_test_X, airline_test)\n",
    "\n",
    "st.write(\"\")\n",
    "st.write(\"\")\n",
    "st.write(\"\")\n",
    "\n",
    "xg.xg_ensemble(X, y, airline_test_X, airline_test)\n",
    "\n",
    "st.write(\"\")\n",
    "st.write(\"\")\n",
    "st.write(\"\")\n",
    "\n",
    "# light.light_(X, y, airline_test_X, airline_test)\n",
    "\n",
    "# st.write(\"\")\n",
    "# st.write(\"\")\n",
    "# st.write(\"\")\n",
    "\n",
    "knn.neighbors(X, y, airline_test_X, airline_test)\n",
    "\n",
    "st.write(\"\")\n",
    "st.write(\"\")\n",
    "st.write(\"\")\n",
    "\n",
    "\n",
    "st.write(\"만족도 예측\")\n",
    "\n",
    "r1_col1, r1_col2, r1_col3, r1_col4, r1_col5, r1_col6, r1_col7, r1_col8, r1_col9, r1_col10, r1_col12, r1_col13, r1_col14, r1_col15, r1_col16 = st.columns(16)\n",
    "\n",
    "Inflight wifi service = r1_col1.slider(\"Inflight wifi service\", 0, 5)\n",
    "\n",
    "Departure/Arrival time convenient = r1_col2.slider(\"Departure/Arrival time convenient\", 0, 5)\n",
    "\n",
    "Ease of Online booking = r1_col3.slider(\"Ease of Online booking\", 0, 5)\n",
    "\n",
    "Gate location = r1_col4.slider(\"Gate location\", 0, 5)\n",
    "\n",
    "Food and drink = r1_col5.slider(\"Food and drink\", 0, 5)\n",
    "\n",
    "Online boarding  = r1_col6.slider(\"Online boarding\", 0, 5)\n",
    "\n",
    "Seat comfort  = r1_col7.slider(\"Seat comfort\", 0, 5)\n",
    "\n",
    "Inflight entertainment = r1_col8.slider(\"Inflight entertainment\", 0, 5)\n",
    "\n",
    "On-board service = r1_col9.slider(\"On-board service\", 0, 5)\n",
    "\n",
    "Leg room service = r1_col10.slider(\"Leg room service\", 0, 5)\n",
    "\n",
    "Baggage handling = r1_col11.slider(\"Baggage handling\", 0, 5)\n",
    "\n",
    "Checkin service = r1_col12.slider(\"Checkin service\", 0, 5)\n",
    "\n",
    "Inflight service = r1_col13.slider(\"Inflight service\", 0, 5)\n",
    "\n",
    "Departure Delay in Minutes = r1_col14.slider(\"Departure Delay in Minutes\", 0, 5)\n",
    "\n",
    "Arrival Delay in Minutes = r1_col15.slider(\"Arrival Delay in Minutes\", 0, 5)\n",
    "\n",
    "#region_option = ('logic', 'tree', 'forest', 'xg', 'light', 'knn')\n",
    "#region = r2_col2.selectbox(\"region\", region_option)\n",
    "#is_southwest = region_option[0] == region\n",
    "#is_southeast = region_option[1] == region\n",
    "#is_northwest = region_option[2] == region\n",
    "\n",
    "\n",
    "# 예측 버튼\n",
    "predict_button = st.button(\"예측\")\n",
    "\n",
    "st.write(\"---\")\n",
    "\n",
    "# 예측 결과\n",
    "if predict_button:\n",
    "    model = joblib.load('satification.pkl')\n",
    "\n",
    "    pred = model.predict(np.array([[Inflight wifi service, Departure/Arrival time convenient,\n",
    "                                    Ease of Online booking, Gate location, Food and drink,\n",
    "                                    Online boarding, Seat comfort, Inflight entertainment,\n",
    "                                    On-board service, Leg room service, Baggage handling,\n",
    "                                    Checkin service , Inflight service, Cleanliness,\n",
    "                                    Departure Delay in Minutes, Arrival Delay in Minutes]])\n",
    "                         \n",
    "    st.metric(\"예측 만족도\", pred[0])\n",
    "                         \n",
    "\n",
    "st.markdown('**<center><span style=\"color: MidnightBlue; font-size:250%\">Thank You!</span></center>**', unsafe_allow_html=True)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
